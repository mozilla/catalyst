# Template Configuration for Catalyst Performance Reports
# Copy this file and customize for your experiment
#
# Example usage:
# 1. Copy template: cp configs/template.yaml configs/my-experiment.yaml
# 2. Edit the configuration values below
# 3. Generate report: just generate-perf-report --config configs/my-experiment.yaml
# 4. Generated reports will be saved to reports/{slug}.html

# Experiment identifier (required)
# This should match your experiment slug from Nimbus
slug: your-experiment-slug-here

# Target segments/platforms (optional)
# Common values: Windows, Linux, Mac, Android
segments:
  - Windows
  - Linux
  - Mac

# Histogram metrics to analyze (optional)
histograms:
  # Memory
  - metrics.memory_distribution.memory_total
  - metrics.memory_distribution.memory_heap_allocated

  # Top level pageload
  - metrics.timing_distribution.performance_pageload_fcp
  - metrics.timing_distribution.performance_time_response_start
  - metrics.timing_distribution.performance_pageload_load_time
  - metrics.timing_distribution.perf_largest_contentful_paint

  # Networking
  - metrics.timing_distribution.networking_dns_lookup_time
  - metrics.timing_distribution.network_tcp_connection
  - metrics.timing_distribution.network_tls_handshake
  - metrics.timing_distribution.networking_transaction_wait_time

  # Gfx
  - metrics.timing_distribution.gfx_composite_time
  - metrics.timing_distribution.gfx_content_paint_time

# Event metrics to analyze (optional)
events:
  # Include crash events to track total crash counts for each experiment branch
  - crash

  # Include pageload events with custom metric configurations
  # If pageload is included without sub-metrics, defaults will be used
  - pageload:
      fcp_time:
        max: 30000
      lcp_time:
        max: 30000
      load_time:
        max: 30000
      response_time:
        max: 30000

# Performance tuning (optional)
# Number of parallel threads for BigQuery telemetry data fetching
# Default: 4 (recommended for most cases)
# max_parallel_queries: 4

